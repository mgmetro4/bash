#!/bin/bash

#need to scp over WALinuxAgent and lis-rpms-4.2.5-2.tar.gz (Linux Agent and Linux Integration Services)

#.zip file location on your instance
global AZURE_LINUX_AGENT="./WALinuxAgent-2.2.30.zip"

#Linux Integration Services Tar
global LIS_FOLDER_TAR="./lis-rpms-4.2.5-3.tar.gz"

#Centos Version
global centos="Centos6.7"

#------------------------------------------------------------------------

main()
{

list_of_functions=(install_azure_linux_agent install_LIS uninstall_NM replace_sysconfig_network replace_network_scripts modify_udev network_start deprovision_)

for function_ in ${array_of_functions[@]} ; do
    if $function_ ; then
        echo "Successful"
    else 
        echo "Failed - fix manually"
    done

#Azure likes to create swap by itself
#find swap space at /proc/swaps
#SWAP_SPACE=2000

#edit /etc/waagent.conf
# ResourceDisk.Format=y
# ResourceDisk.Filesystem=ext4
# ResourceDisk.MountPoint=/mnt/resource
# ResourceDisk.EnableSwap=y
# ResourceDisk.SwapSizeMB=2048    ## NOTE: set this to whatever you need it to be.




#END OF MAIN
}


#---------------Functions---------------

install_azure_linux_agent() 
{
    #unzip azure linux agent
    "unzip $AZURE_LINUX_AGENT"

    #go to directory and use their install script
    local agent_dir=${agent%.*}
    "cd $agent_dir"
    "python setup.py install"
    "service waagent restart"
    "waagent --version"
}

install_LIS() 
{
    "cd .."

    #extract tar
    "tar xvzf $LIS_FOLDER_TAR"

    #go to LISISO directory
    "cd ./LISISO"
     
    #go to Centos Folder - 6.7
    "cd ./"$centos

    #use install.sh there
    "./install.sh"
}


uninstall_NM() 
{
    #Make sure NetworkManager is uninstalled
    "rpm -e --nodeps NetworkManager"
}

replace_sysconfig_network() 
{
    (
    echo "NETWORKING=yes"
    echo "HOSTNAME=localhost.localdomain"
    ) > /etc/sysconfig/network
}

replace_network_scripts() 
{
    (
    echo "DEVICE=eth0"
    echo "ONBOOT=yes"
    echo "BOOTPROTO=dhcp"
    echo "TYPE=Ethernet"
    echo "USERCTL=no"
    echo "PEERDNS=yes"
    echo "IPV6INIT=no"
    ) > /etc/sysconfig/network-scripts/ifcfg-eth0
}


modify_udev() 
{
    #Modify udev rules to avoid generating static rules for the Ethernet interface(s).""
    #"These rules can cause problems when cloning a virtual machine in Microsoft Azure or Hyper-V"
    "sudo ln -s /dev/null /etc/udev/rules.d/75-persistent-net-generator.rules"
    "sudo rm -f /etc/udev/rules.d/70-persistent-net.rules"
}


network_start() 
{
    #Ensure network service will start at boot
    "sudo chkconfig network on"
}

modify_boot_kernel() 
{
    #add console=ttyS0 earlyprintk=ttyS0 rootdelay=300 to kernel parameters
    #removes rhgb quiet crashkernel=auto
    #boot found at /etc/grub.conf and /boot/grub/grub.conf - change both just in case
    
    (
    # grub.conf generated by anaconda
    #
    # Note that you do not have to rerun grub after making changes to this file
    # NOTICE:  You have a /boot partition.  This means that
    #          all kernel and initrd paths are relative to /boot/, eg.
    #          root (hd0,0)
    #          kernel /vmlinuz-version ro root=/dev/mapper/vg01-lv_root numa=off
    #          initrd /initrd-[generic-]version.img
    #boot=/dev/sda
    default=0
    timeout=5
    splashimage=(hd0,0)/grub/splash.xpm.gz
    hiddenmenu
    password --encrypted $6$l0IqIits3HNAgrrm$4gaZL2c8.gZf.WQ2G.wqzpZU9rch6hi3p8SVBCwn9K29rEjGAsjDPBZXxdAjfSBY8sDcPRsVzgnMaU6q8OGd40
    title MgmtOS (2.6.32-696.18.7.el6.x86_64)
            root (hd0,0)
            kernel /vmlinuz-2.6.32-696.18.7.el6.x86_64 ro root=/dev/mapper/vg01-lv_root rd_LVM_LV=vg01/lv_swap rd_NO_LUKS LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 rd_LVM_LV=vg01/lv_root  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM  numa=off audit=1 console=ttyS0 earlyprintk=ttyS0 rootdelay=300
            initrd /initramfs-2.6.32-696.18.7.el6.x86_64.img
    title MgmtOS 6 (2.6.32-573.3.1.el6.x86_64)
            root (hd0,0)
            kernel /vmlinuz-2.6.32-573.3.1.el6.x86_64 ro root=/dev/mapper/vg01-lv_root rd_LVM_LV=vg01/lv_swap rd_NO_LUKS LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 rd_LVM_LV=vg01/lv_root  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM  numa=off audit=1 console=ttyS0 earlyprintk=ttyS0 rootdelay=300
            initrd /initramfs-2.6.32-573.3.1.el6.x86_64.img
    # NUMAOFFADDED
    ) > /etc/grub.conf


    (
    # grub.conf generated by anaconda
    #
    # Note that you do not have to rerun grub after making changes to this file
    # NOTICE:  You have a /boot partition.  This means that
    #          all kernel and initrd paths are relative to /boot/, eg.
    #          root (hd0,0)
    #          kernel /vmlinuz-version ro root=/dev/mapper/vg01-lv_root numa=off
    #          initrd /initrd-[generic-]version.img
    #boot=/dev/sda
    default=0
    timeout=5
    splashimage=(hd0,0)/grub/splash.xpm.gz
    hiddenmenu
    password --encrypted $6$l0IqIits3HNAgrrm$4gaZL2c8.gZf.WQ2G.wqzpZU9rch6hi3p8SVBCwn9K29rEjGAsjDPBZXxdAjfSBY8sDcPRsVzgnMaU6q8OGd40
    title MgmtOS (2.6.32-696.18.7.el6.x86_64)
            root (hd0,0)
            kernel /vmlinuz-2.6.32-696.18.7.el6.x86_64 ro root=/dev/mapper/vg01-lv_root rd_LVM_LV=vg01/lv_swap rd_NO_LUKS LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 rd_LVM_LV=vg01/lv_root  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM numa=off audit=1 console=ttyS0 earlyprintk=ttyS0 rootdelay=300
            initrd /initramfs-2.6.32-696.18.7.el6.x86_64.img
    title MgmtOS 6 (2.6.32-573.3.1.el6.x86_64)
            root (hd0,0)
            kernel /vmlinuz-2.6.32-573.3.1.el6.x86_64 ro root=/dev/mapper/vg01-lv_root rd_LVM_LV=vg01/lv_swap rd_NO_LUKS LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 rd_LVM_LV=vg01/lv_root  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM numa=off audit=1 console=ttyS0 earlyprintk=ttyS0 rootdelay=300
            initrd /initramfs-2.6.32-573.3.1.el6.x86_64.img
    # NUMAOFFADDED
    ) > /boot/grub/grub.conf

}

deprovision_() 
{
    #deprovision virutal machine (except we are leaving in root username)
    "export HISTSIZE=0"
    "logout"
}

#run the script
main "$@"